// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id        String   @id @default(uuid())
  name      String?
  email     String
  password  String
  token     String?
  zaps       Zap[]  
}

model Zap{
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId] , references: [id])
  trigger     Trigger?
  actions     Action[]
  zapRuns     zapRun[]
}

model Trigger{
  id              String        @id @default(uuid())
  zapId           String        @unique
  zap             Zap           @relation(fields: [zapId], references: [id])
  triggerTypeId   String
  triggerType     AvailableTriggers @relation(fields: [triggerTypeId], references: [id])

}

model AvailableTriggers{
  id          String        @id @default(uuid())
  name        String
  trigger     Trigger[]       
}

model Action{
  id              String            @id @default(uuid())
  zapId           String
  zap             Zap               @relation(fields: [zapId], references: [id])
  actionTypeId    String
  actionType      AvailableActions  @relation(fields: [actionTypeId], references: [id])
  sortingOrder    Int               @default(0)
}

model AvailableActions{
  id          String        @id  @default(uuid())
  name        String
  actions     Action[]        
}

model zapRun{
  id              String @id @default(uuid())
  zapId           String
  metaData        Json
  zap             Zap    @relation(fields: [zapId], references: [id])
  zapRunOutBox    zapRunOutBox?
}

model zapRunOutBox{
  id              String    @id @default(uuid())
  zapRunId        String    @unique
  zapRun          zapRun    @relation(fields: [zapRunId], references: [id])
}